{"ast":null,"code":"import _regeneratorRuntime from \"D:/HTML_CSS/popcorn-v3/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/HTML_CSS/popcorn-v3/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.entries.js\";\nimport \"core-js/modules/es.array.splice.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport GenreApi from \"../../api/GenreApi\";\nimport UserApi from \"../../api/UserApi\";\nimport GalleryApi from \"../../api/GalleryApi\";\nexport default {\n  name: \"ui-gallery\",\n  data: function data() {\n    return {\n      genres: [{}],\n      type: [\"movie\", \"series\"],\n      movieList: [],\n      filterList: [],\n      pageOnLoad: true,\n      genreFilterVal: null,\n      typeFilerVal: null,\n      publicPath: process.env.BASE_URL\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var user, galleries;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return UserApi.findToken(localStorage.getItem(\"token\"));\n\n            case 2:\n              user = _context.sent;\n              _context.next = 5;\n              return GalleryApi.findUserId(user[0]._id);\n\n            case 5:\n              galleries = _context.sent;\n              _context.next = 8;\n              return GenreApi.getAll();\n\n            case 8:\n              _this.genres = _context.sent;\n              galleries.forEach(function (item) {\n                _this.movieList.push(item);\n              });\n              _this.filterList = _this.movieList;\n              _this.pageOnLoad = false;\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  methods: {\n    filter: function filter(list) {\n      var filter = {\n        genre: this.genreFilterVal,\n        type: this.typeFilerVal\n      };\n      list = this.movieList.filter(function (item) {\n        var genre = true,\n            type = true;\n\n        if (filter.genre != null) {\n          for (var _i = 0, _Object$entries = Object.entries(item._genre); _i < _Object$entries.length; _i++) {\n            var value = _Object$entries[_i];\n\n            if (value[\"1\"] == filter.genre._id) {\n              genre = true;\n              break;\n            }\n\n            genre = false;\n          }\n        }\n\n        if (filter.type != null) {\n          if (filter.type.toLowerCase() == item._type) {\n            type = true;\n          } else type = false;\n        }\n\n        if (genre && type) return true;else return false;\n      });\n      return list;\n    },\n    filterGallery: function filterGallery() {\n      console.log(\"filter\");\n      this.pageOnLoad = true;\n      this.filterList = this.filter(this.filterList);\n      this.pageOnLoad = false;\n    },\n    goWatch: function goWatch(movieId) {\n      this.$router.push(\"/watch/\".concat(movieId));\n    },\n    removeGallery: function removeGallery(id) {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return GalleryApi.destroyGallery(id);\n\n              case 2:\n                _this2.movieList.forEach(function (item, index) {\n                  if (item._id == id) {\n                    _this2.movieList.splice(index, 1);\n\n                    return true;\n                  }\n                });\n\n                _this2.filterList = _this2.filter(_this2.filterList);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2EA;AACA;AACA;AACA;EACAA,kBADA;EAEAC,IAFA,kBAEA;IACA;MACAC,YADA;MAEAC,yBAFA;MAGAC,aAHA;MAIAC,cAJA;MAKAC,gBALA;MAMAC,oBANA;MAOAC,kBAPA;MAQAC;IARA;EAUA,CAbA;EAcAC,OAdA,qBAcA;IAAA;;IAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,OACAC,gDADA;;YAAA;cACAC,IADA;cAAA;cAAA,OAEAC,kCAFA;;YAAA;cAEAC,SAFA;cAAA;cAAA,OAGAC,iBAHA;;YAAA;cAGA,YAHA;cAIAD;gBACA;cACA,CAFA;cAGA;cACA;;YARA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EASA,CAvBA;EAwBAE;IACAC,MADA,kBACAC,IADA,EACA;MACA;QACAC,0BADA;QAEAhB;MAFA;MAIAe;QACA;QAAA,IACAf,WADA;;QAEA;UACA;YAAA;;YACA;cACAgB;cACA;YACA;;YACAA;UACA;QACA;;QACA;UACA;YACAhB;UACA,CAFA,MAEAA;QACA;;QACA,oCACA;MACA,CAnBA;MAqBA;IACA,CA5BA;IA8BAiB,aA9BA,2BA8BA;MACAC;MACA;MACA;MACA;IACA,CAnCA;IAoCAC,OApCA,mBAoCAC,OApCA,EAoCA;MACA;IACA,CAtCA;IAuCAC,aAvCA,yBAuCAC,EAvCA,EAuCA;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAZ,6BADA;;cAAA;gBAEA;kBACA;oBACA;;oBACA;kBACA;gBACA,CALA;;gBAMA;;cARA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IASA;EAhDA;AAxBA","names":["name","data","genres","type","movieList","filterList","pageOnLoad","genreFilterVal","typeFilerVal","publicPath","mounted","UserApi","user","GalleryApi","galleries","GenreApi","methods","filter","list","genre","filterGallery","console","goWatch","movieId","removeGallery","id"],"sourceRoot":"src/components/home","sources":["Gallery.vue"],"sourcesContent":["<template>\r\n  <v-card dark flat tile min-height=\"100vh\" class=\"pt-15 px-8\">\r\n    <h2>Your gallery:</h2>\r\n    <v-row align=\"start\" justify=\"center\">\r\n      <v-col md=\"4\">\r\n        <v-select\r\n          v-model=\"genreFilterVal\"\r\n          @change=\"filterGallery()\"\r\n          :items=\"genres\"\r\n          item-value=\"_id\"\r\n          item-text=\"_name\"\r\n          label=\"Genre\"\r\n          return-object\r\n          clearable\r\n          color=\"primary\"\r\n          outlined\r\n        ></v-select>\r\n      </v-col>\r\n      <v-col md=\"4\">\r\n        <v-select\r\n          v-model=\"typeFilerVal\"\r\n          @change=\"filterGallery()\"\r\n          :items=\"type\"\r\n          label=\"Type\"\r\n          return-object\r\n          clearable\r\n          color=\"primary\"\r\n          outlined\r\n        ></v-select>\r\n      </v-col>\r\n    </v-row>\r\n    <v-card v-if=\"pageOnLoad\" tile flat class=\"text-center py-15\">\r\n      <v-progress-circular\r\n        size=\"50\"\r\n        color=\"primary\"\r\n        indeterminate\r\n      ></v-progress-circular>\r\n      <h4>Loading...</h4>\r\n    </v-card>\r\n    <div id=\"gallery\" v-else>\r\n      <v-card v-if=\"filterList.length < 1\" flat tile class=\"pa-5\"\r\n        >Your Gallery is empty now</v-card\r\n      >\r\n      <v-container v-else>\r\n        <v-layout class=\"flex-wrap\">\r\n          <v-card\r\n            v-for=\"(item, index) in filterList\"\r\n            :key=\"index\"\r\n            class=\"ma-2 pa-3\"\r\n          >\r\n            <v-img\r\n              :src=\"publicPath + 'images/thumbnails/' + item._movie._thumbnail\"\r\n              position=\"center\"\r\n              width=\"200\"\r\n              height=\"200\"\r\n            ></v-img>\r\n            <h4 class=\"py-2\">{{ item._movie._name | truncate(20) }}</h4>\r\n            <v-card-actions class=\"d-flex\">\r\n              <v-btn @click=\"goWatch(item._movie._id)\" class=\"primary\">\r\n                <v-icon>mdi-play</v-icon>\r\n                Watch\r\n              </v-btn>\r\n              <v-btn @click=\"removeGallery(item._id)\" class=\"primary\">\r\n                <v-icon>mdi-delete</v-icon>\r\n                Remove\r\n              </v-btn>\r\n            </v-card-actions>\r\n          </v-card>\r\n        </v-layout>\r\n      </v-container>\r\n    </div>\r\n  </v-card>\r\n</template>\r\n\r\n<script>\r\nimport GenreApi from \"../../api/GenreApi\";\r\nimport UserApi from \"../../api/UserApi\";\r\nimport GalleryApi from \"../../api/GalleryApi\";\r\nexport default {\r\n  name: \"ui-gallery\",\r\n  data() {\r\n    return {\r\n      genres: [{}],\r\n      type: [\"movie\", \"series\"],\r\n      movieList: [],\r\n      filterList: [],\r\n      pageOnLoad: true,\r\n      genreFilterVal: null,\r\n      typeFilerVal: null,\r\n      publicPath: process.env.BASE_URL,\r\n    };\r\n  },\r\n  async mounted() {\r\n    const user = await UserApi.findToken(localStorage.getItem(\"token\"));\r\n    const galleries = await GalleryApi.findUserId(user[0]._id);\r\n    this.genres = await GenreApi.getAll();\r\n    galleries.forEach((item) => {\r\n      this.movieList.push(item);\r\n    });\r\n    this.filterList = this.movieList;\r\n    this.pageOnLoad = false;\r\n  },\r\n  methods: {\r\n    filter(list) {\r\n      const filter = {\r\n        genre: this.genreFilterVal,\r\n        type: this.typeFilerVal,\r\n      };\r\n      list = this.movieList.filter(function (item) {\r\n        let genre = true,\r\n          type = true;\r\n        if (filter.genre != null) {\r\n          for (const value of Object.entries(item._genre)) {\r\n            if (value[\"1\"] == filter.genre._id) {\r\n              genre = true;\r\n              break;\r\n            }\r\n            genre = false;\r\n          }\r\n        }\r\n        if (filter.type != null) {\r\n          if (filter.type.toLowerCase() == item._type) {\r\n            type = true;\r\n          } else type = false;\r\n        }\r\n        if (genre && type) return true;\r\n        else return false;\r\n      });\r\n\r\n      return list;\r\n    },\r\n\r\n    filterGallery() {\r\n      console.log(\"filter\");\r\n      this.pageOnLoad = true;\r\n      this.filterList = this.filter(this.filterList);\r\n      this.pageOnLoad = false;\r\n    },\r\n    goWatch(movieId) {\r\n      this.$router.push(`/watch/${movieId}`);\r\n    },\r\n    async removeGallery(id) {\r\n      await GalleryApi.destroyGallery(id);\r\n      this.movieList.forEach((item, index) => {\r\n        if (item._id == id) {\r\n          this.movieList.splice(index, 1);\r\n          return true;\r\n        }\r\n      });\r\n      this.filterList = this.filter(this.filterList);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n</style>"]},"metadata":{},"sourceType":"module"}