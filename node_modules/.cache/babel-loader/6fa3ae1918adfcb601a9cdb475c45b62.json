{"ast":null,"code":"import _regeneratorRuntime from \"D:/HTML_CSS/popcorn-v3/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/HTML_CSS/popcorn-v3/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.entries.js\";\nimport \"core-js/modules/es.array.splice.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport GenreApi from '../../api/GenreApi';\nimport UserApi from '../../api/UserApi';\nimport GalleryApi from '../../api/GalleryApi';\nexport default {\n  name: 'ui-gallery',\n  data: function data() {\n    return {\n      genres: [{}],\n      type: [\"movie\", \"series\"],\n      movieList: [],\n      filterList: [],\n      pageOnLoad: true,\n      publicPath: process.env.BASE_URL\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this.loadData();\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  methods: {\n    loadData: function loadData() {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var user, galleries;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return UserApi.findToken(localStorage.getItem('token'));\n\n              case 2:\n                user = _context2.sent;\n                _context2.next = 5;\n                return GalleryApi.findUserId(user[0]._id);\n\n              case 5:\n                galleries = _context2.sent;\n                _context2.next = 8;\n                return GenreApi.getAll();\n\n              case 8:\n                _this2.genres = _context2.sent;\n                galleries.forEach(function (item) {\n                  _this2.movieList.push(item);\n                });\n                _this2.filterList = _this2.movieList;\n                console.log(_this2.filterList);\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n    filter: function filter(list) {\n      var filter = {\n        genre: this.genreFilterVal,\n        type: this.typeFilerVal\n      };\n      list = this.movieList.filter(function (item) {\n        var genre = true,\n            type = true;\n\n        if (filter.genre != null) {\n          for (var _i = 0, _Object$entries = Object.entries(item._genre); _i < _Object$entries.length; _i++) {\n            var value = _Object$entries[_i];\n\n            if (value[\"1\"] == filter.genre._id) {\n              genre = true;\n              break;\n            }\n\n            genre = false;\n          }\n        }\n\n        if (filter.type != null) {\n          if (filter.type.toLowerCase() == item._type) {\n            type = true;\n          } else type = false;\n        }\n\n        if (genre && type) return true;else return false;\n      });\n      return list;\n    },\n    filterGallery: function filterGallery() {\n      this.pageOnLoad = true;\n      this.filterList = this.filter(this.filterList);\n      this.pageOnLoad = false;\n    },\n    goWatch: function goWatch(movieId) {\n      this.$router.push(\"/watch/\".concat(movieId));\n    },\n    removeGallery: function removeGallery(id) {\n      var _this3 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return GalleryApi.destroyGallery(id);\n\n              case 2:\n                _this3.movieList.forEach(function (item, index) {\n                  if (item._id == id) {\n                    _this3.movieList.splice(index, 1);\n\n                    return true;\n                  }\n                });\n\n                _this3.filterList = _this3.filter(_this3.filterList);\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }))();\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;AACA;AACA;AACA;EACAA,kBADA;EAEAC,IAFA,kBAEA;IACA;MACAC,YADA;MAEAC,yBAFA;MAGAC,aAHA;MAIAC,cAJA;MAKAC,gBALA;MAMAC;IANA;EAQA,CAXA;EAYAC,OAZA,qBAYA;IAAA;;IAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,OACA,gBADA;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EAEA,CAdA;EAeAC;IACAC,QADA,sBACA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAC,gDADA;;cAAA;gBACAC,IADA;gBAAA;gBAAA,OAEAC,kCAFA;;cAAA;gBAEAC,SAFA;gBAAA;gBAAA,OAGAC,iBAHA;;cAAA;gBAGA,aAHA;gBAIAD;kBACA;gBACA,CAFA;gBAGA;gBACAE;;cARA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IASA,CAVA;IAWAC,MAXA,kBAWAC,IAXA,EAWA;MACA;QACAC,0BADA;QAEAhB;MAFA;MAIAe;QACA;QAAA;;QACA;UACA;YAAA;;YACA;cACAC;cACA;YACA;;YACAA;UACA;QACA;;QACA;UACA;YACAhB;UACA,CAFA,MAGAA;QACA;;QACA,oCACA;MACA,CAnBA;MAqBA;IACA,CAtCA;IAwCAiB,aAxCA,2BAwCA;MACA;MACA;MACA;IACA,CA5CA;IA6CAC,OA7CA,mBA6CAC,OA7CA,EA6CA;MACA;IACA,CA/CA;IAgDAC,aAhDA,yBAgDAC,EAhDA,EAgDA;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAX,6BADA;;cAAA;gBAEA;kBACA;oBACA;;oBACA;kBACA;gBACA,CALA;;gBAMA;;cARA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IASA;EAzDA;AAfA","names":["name","data","genres","type","movieList","filterList","pageOnLoad","publicPath","mounted","methods","loadData","UserApi","user","GalleryApi","galleries","GenreApi","console","filter","list","genre","filterGallery","goWatch","movieId","removeGallery","id"],"sourceRoot":"src/components/home","sources":["Gallery.vue"],"sourcesContent":["<template>\r\n  <v-card dark flat tile min-height=\"100vh\" class=\"pt-15 px-8\">\r\n    <h2>Your gallery:</h2>\r\n    <v-card v-if=\"filterList.length >0\" flat tile class=\"pa-5\">Your Gallery is empty now</v-card>\r\n    <v-container v-else>\r\n        <v-row align=\"start\" justify=\"center\">\r\n            <v-col md=\"4\">\r\n                <v-select @change=\"filterGallery()\" :items=\"genres\" item-value=\"_id\" item-text=\"_name\" label=\"Genre\" return-object clearable color=\"primary\" outlined></v-select>\r\n            </v-col>\r\n            <v-col md=\"4\">\r\n                <v-select @change=\"filterGallery()\" :items=\"type\" label=\"Type\" return-object clearable color=\"primary\" outlined></v-select>\r\n            </v-col>\r\n        </v-row>\r\n        <v-layout class=\"flex-wrap\">\r\n            <v-card v-for=\"(item, index) in filterList\" :key=\"index\" class=\"ma-2 pa-3\">\r\n                <v-img :src=\"publicPath + 'images/thumbnails/' + item._movie._thumbnail \" position=\"center\" width=\"200\" height=\"200\"></v-img>\r\n                <h4 class=\"py-2\">{{item._movie._name | truncate(20)}}</h4>\r\n                <v-card-actions class=\"d-flex\">\r\n                    <v-btn @click=\"goWatch(item._movie._id)\" class=\"primary\">\r\n                        <v-icon>mdi-play</v-icon>\r\n                        Watch\r\n                    </v-btn>\r\n                    <v-btn @click=\"removeGallery(item._id)\" class=\"primary\">\r\n                        <v-icon>mdi-delete</v-icon>\r\n                        Remove\r\n                    </v-btn>\r\n                </v-card-actions>\r\n            </v-card>\r\n        </v-layout>\r\n    </v-container>\r\n  </v-card>\r\n</template>\r\n\r\n<script>\r\nimport GenreApi from '../../api/GenreApi'\r\nimport UserApi from '../../api/UserApi'\r\nimport GalleryApi from '../../api/GalleryApi'\r\nexport default {\r\n    name: 'ui-gallery',\r\n    data(){\r\n        return{\r\n            genres: [{}],\r\n            type:[\"movie\", \"series\"],\r\n            movieList: [],\r\n            filterList: [],\r\n            pageOnLoad: true,\r\n            publicPath: process.env.BASE_URL\r\n        }\r\n    },\r\n    async mounted(){\r\n        await this.loadData()\r\n    },\r\n    methods:{\r\n      async loadData(){\r\n        const user = await UserApi.findToken(localStorage.getItem('token'))\r\n        const galleries = await GalleryApi.findUserId(user[0]._id)\r\n        this.genres = await GenreApi.getAll()\r\n        galleries.forEach(item=>{\r\n            this.movieList.push(item)\r\n        })\r\n        this.filterList = this.movieList\r\n        console.log(this.filterList)\r\n      },\r\n      filter(list){\r\n            const filter = {\r\n                genre: this.genreFilterVal,\r\n                type: this.typeFilerVal,\r\n            }\r\n            list = this.movieList.filter(function(item){\r\n                let genre  = true, type = true\r\n                if(filter.genre != null){\r\n                    for(const value of Object.entries(item._genre)){\r\n                       if(value[\"1\"] == filter.genre._id){\r\n                        genre = true\r\n                        break\r\n                       }\r\n                       genre = false\r\n                    }\r\n                }\r\n                if(filter.type != null){\r\n                   if(filter.type.toLowerCase() == item._type){\r\n                    type = true\r\n                   }\r\n                   else type = false\r\n                }\r\n                if(genre && type) return true\r\n                else return false\r\n            })\r\n\r\n            return list\r\n        },\r\n\r\n        filterGallery(){\r\n            this.pageOnLoad = true\r\n            this.filterList = this.filter(this.filterList)\r\n            this.pageOnLoad = false\r\n        },\r\n        goWatch(movieId){\r\n          this.$router.push(`/watch/${movieId}`)\r\n        },\r\n        async removeGallery(id){\r\n          await GalleryApi.destroyGallery(id)\r\n          this.movieList.forEach((item, index)=>{\r\n            if(item._id == id) {\r\n                this.movieList.splice(index, 1)\r\n                return true\r\n            }\r\n          })\r\n          this.filterList = this.filter(this.filterList)\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}