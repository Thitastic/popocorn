{"ast":null,"code":"import _regeneratorRuntime from \"D:/HTML_CSS/popcorn-v3/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/HTML_CSS/popcorn-v3/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.object.entries.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport MovieApi from '../../api/MovieApi';\nimport GenreApi from '../../api/GenreApi';\nexport default {\n  name: 'ui-collections',\n  data: function data() {\n    return {\n      publicPath: process.env.BASE_URL,\n      genres: [{}],\n      movieList: null,\n      movieListFilter: null,\n      pageOnLoad: true,\n      filterVal: null\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var moviesType;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              moviesType = _this.$route.query.type;\n              _context.next = 3;\n              return _this.loadMovie(moviesType);\n\n            case 3:\n              _this.movieList = _context.sent;\n              _context.next = 6;\n              return _this.loadGenres();\n\n            case 6:\n              _this.genres = _context.sent;\n              _this.movieListFilter = _this.movieList;\n              _this.pageOnLoad = false;\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  watch: {\n    '$route.query.type': 'queryChange'\n  },\n  methods: {\n    loadMovie: function loadMovie(type) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return MovieApi.findType(type);\n\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n    loadGenres: function loadGenres() {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return GenreApi.getAll();\n\n              case 2:\n                return _context3.abrupt(\"return\", _context3.sent);\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }))();\n    },\n    queryChange: function queryChange() {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _this2.pageOnLoad = true;\n                console.log(_this2.$route.query.type);\n                _context4.next = 4;\n                return _this2.loadMovie(_this2.$route.query.type);\n\n              case 4:\n                _this2.movieList = _context4.sent;\n                _this2.movieListFilter = _this2.movieList;\n                _this2.pageOnLoad = false;\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }))();\n    },\n    filter: function filter(list) {\n      var filter = this.filterVal;\n      list = this.movieList.filter(function (item) {\n        if (filter == null) return true;\n\n        for (var _i = 0, _Object$entries = Object.entries(item._genre); _i < _Object$entries.length; _i++) {\n          var value = _Object$entries[_i];\n\n          if (value[\"1\"] == filter._id) {\n            return true;\n          }\n        }\n\n        return false;\n      });\n      return list;\n    },\n    startFilter: function startFilter() {\n      this.pageOnLoad = true;\n      this.movieListFilter = this.filter(this.movieListFilter);\n      this.pageOnLoad = false;\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA;AACA;AACA;EACAA,sBADA;EAEAC,IAFA,kBAEA;IACA;MACAC,gCADA;MAEAC,YAFA;MAGAC,eAHA;MAIAC,qBAJA;MAKAC,gBALA;MAMAC;IANA;EAQA,CAXA;EAYAC,OAZA,qBAYA;IAAA;;IAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cACAC,UADA,GACA,uBADA;cAAA;cAAA,OAEA,2BAFA;;YAAA;cAEA,eAFA;cAAA;cAAA,OAGA,kBAHA;;YAAA;cAGA,YAHA;cAIA;cACA;;YALA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EAMA,CAlBA;EAmBAC;IACA;EADA,CAnBA;EAsBAC;IACAC,SADA,qBACAC,IADA,EACA;MAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAC,uBADA;;cAAA;gBAAA;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAEA,CAHA;IAIAC,UAJA,wBAIA;MAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAC,iBADA;;cAAA;gBAAA;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAEA,CANA;IAOAC,WAPA,yBAOA;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA;gBACA;gBACAC;gBAFA;gBAAA,OAGA,0CAHA;;cAAA;gBAGA,gBAHA;gBAIA;gBACA;;cALA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAMA,CAbA;IAcAC,MAdA,kBAcAC,IAdA,EAcA;MACA;MACAA;QACA;;QACA;UAAA;;UACA;YACA;UACA;QACA;;QACA;MACA,CARA;MASA;IACA,CA1BA;IA2BAC,WA3BA,yBA2BA;MACA;MACA;MACA;IACA;EA/BA;AAtBA","names":["name","data","publicPath","genres","movieList","movieListFilter","pageOnLoad","filterVal","mounted","moviesType","watch","methods","loadMovie","type","MovieApi","loadGenres","GenreApi","queryChange","console","filter","list","startFilter"],"sourceRoot":"src/components/home","sources":["HomeCollections.vue"],"sourcesContent":["<template>\r\n  <div id=\"collections\">\r\n    <v-sheet v-if=\"pageOnLoad\" dark height=\"100vh\">\r\n      <v-skeleton-loader\r\n        class=\"mx-auto\"\r\n        min-height=\"100vh\"\r\n        width=\"100%\"\r\n        type=\"image\"\r\n      ></v-skeleton-loader>\r\n    </v-sheet>\r\n    <v-card v-else dark min-height=\"100vh\" class=\"pt--20 px-8\">\r\n    <v-container>\r\n        <v-row align=\"start\" justify=\"center\">\r\n            <v-col md=\"4\">\r\n                <v-select @change=\"startFilter()\" v-model=\"filterVal\" :items=\"genres\" item-value=\"_id\" item-text=\"_name\" label=\"Genre\" return-object clearable color=\"primary\" outlined></v-select>\r\n            </v-col>\r\n        </v-row>\r\n        <v-layout class=\"flex-wrap\">\r\n            <v-card v-for=\"(item, index) in movieListFilter\" :key=\"index\" class=\"ma-2 pa-3\">\r\n                <v-img width=\"200\" height=\"200\" :src=\"publicPath +'images/thumbnails/' + item._thumbnail\" alt=\"poster\"></v-img>\r\n                <h4 class=\"py-2\">{{item._name | truncate(20)}}</h4>\r\n                <v-card-actions class=\"d-flex\">\r\n                    <v-btn class=\"primary\">\r\n                        <v-icon>mdi-play</v-icon>\r\n                        Watch\r\n                    </v-btn>\r\n                    <v-btn class=\"primary\">\r\n                        <v-icon>mdi-Information</v-icon>\r\n                        info\r\n                    </v-btn>\r\n                </v-card-actions>\r\n            </v-card>\r\n        </v-layout>\r\n    </v-container>\r\n  </v-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport MovieApi from '../../api/MovieApi'\r\nimport GenreApi from '../../api/GenreApi'\r\nexport default {\r\n    name: 'ui-collections',\r\n    data(){\r\n        return{\r\n            publicPath: process.env.BASE_URL,\r\n            genres: [{}],\r\n            movieList: null,\r\n            movieListFilter: null,\r\n            pageOnLoad: true,\r\n            filterVal: null,\r\n        }\r\n    },\r\n    async mounted(){\r\n      const moviesType = this.$route.query.type\r\n      this.movieList = await this.loadMovie(moviesType)\r\n      this.genres = await this.loadGenres()\r\n      this.movieListFilter = this.movieList\r\n      this.pageOnLoad = false\r\n    },\r\n    watch:{\r\n      '$route.query.type' : 'queryChange'\r\n    },\r\n    methods:{\r\n      async loadMovie(type){\r\n        return await MovieApi.findType(type) \r\n      },\r\n      async loadGenres(){\r\n        return await GenreApi.getAll()\r\n      },\r\n      async queryChange(){\r\n        this.pageOnLoad = true\r\n        console.log(this.$route.query.type)\r\n        this.movieList  = await this.loadMovie(this.$route.query.type)\r\n        this.movieListFilter = this.movieList\r\n        this.pageOnLoad = false\r\n      },\r\n      filter(list){\r\n            const filter = this.filterVal\r\n            list = this.movieList.filter(function(item){\r\n              if(filter == null) return true\r\n              for(const value of Object.entries(item._genre)){\r\n                       if(value[\"1\"] == filter._id){\r\n                        return  true\r\n                       }\r\n                    }\r\n                    return false\r\n            })\r\n            return list\r\n      },\r\n      startFilter(){\r\n            this.pageOnLoad = true\r\n            this.movieListFilter = this.filter(this.movieListFilter)\r\n            this.pageOnLoad = false\r\n      },\r\n    },\r\n}\r\n</script>\r\n\r\n<style>\r\n.pt--20{\r\n  padding-top: 80px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}